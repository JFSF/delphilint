{
  "actives": [
    "delph:ClassPerFileRule",
    "delph:InheritedMethodWithNoCodeRule",
    "delph:SwallowedExceptionsRule",
    "delph:ObjectInvokedConstructorRule",
    "delph:MethodResultAssignedRule",
    "delph:EmptyFinallyBlockRule",
    "delph:EmptyInterfaceRule",
    "delph:NoSemiAfterMethodDeclarationRule",
    "delph:NoSemiAfterFieldDeclarationRule",
    "delph:TooLargeMethodRule",
    "delph:TooManyArgumentsRule",
    "delph:TooManyVariablesRule",
    "delph:NoFunctionReturnTypeRule",
    "delph:InterfaceNameRule",
    "delph:ClassNameRule",
    "delph:RecordNameRule",
    "delph:PointerNameRule",
    "delph:MethodNameRule",
    "delph:FieldNameRule",
    "delph:UnitNameRule",
    "delph:CatchingGeneralExceptionRule",
    "delph:RaisingGeneralExceptionRule",
    "delph:RedundantBooleanRule",
    "delph:RedundantCastRule",
    "delph:CharacterToCharacterPointerCastRule",
    "delph:UnicodeToAnsiCastRule",
    "delph:PlatformDependentCastRule",
    "delph:PlatformDependentTruncationRule",
    "delph:RedundantAssignmentRule",
    "delph:PublicFieldsRule",
    "delph:NoGuidRule",
    "delph:AssignedAndFreeRule",
    "delph:IfThenShortCircuitRule",
    "delph:EmptyBeginStatementRule",
    "delph:EmptyMethodRule",
    "delph:EmptyUnitRule",
    "delph:ProjectFileNoFunctionsRule",
    "delph:ProjectFileNoVariablesRule",
    "delph:TypeAliasRule",
    "delph:MixedNamesRule",
    "delph:ConstructorWithoutInheritedStatementRule",
    "delph:DestructorWithoutInheritedStatementRule",
    "delph:BeginEndRequiredRule",
    "delph:NoSemicolonRule",
    "delph:CastAndFreeRule",
    "delph:MethodCyclomaticComplexityRule",
    "delph:MethodCognitiveComplexityRule",
    "delph:ConstantNotationRule",
    "delph:TooManySubProceduresRule",
    "delph:AvoidWithRule",
    "delph:TooLongLineRule",
    "delph:ConstructorCreateRule",
    "delph:ReRaiseExceptionRule",
    "delph:EmptyBracketsRule",
    "delph:DuplicatesRule",
    "delph:VariableNameRule",
    "delph:ShortIdentifiersRule",
    "delph:UnusedLocalVariablesRule",
    "delph:UnusedGlobalVariablesRule",
    "delph:UnusedConstantsRule",
    "delph:UnusedFieldsRule",
    "delph:UnusedPropertiesRule",
    "delph:UnusedMethodsRule",
    "delph:UnusedTypesRule",
    "delph:UnusedImportsRule",
    "delph:ImportSpecificityRule",
    "delph:CompilerHintsRule",
    "delph:CompilerWarningsRule",
    "delph:LegacyInitializationSectionRule",
    "delph:FormatSettingsInitializationRule"
  ]
}